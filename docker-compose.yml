# rm -rf kong_dock && git clone https://github.com/ekpicha/kong_dock.git && cd kong_dock
version: '3'
volumes:
    prometheus_data: {}
    grafana_data: {}
    # kong_datastore: 
    # konga_database:
    # portainer_data:
# networks:
#     webproxy:
#         external:
#             name: webproxy
#     default:
#         external:
#             name: kong_network
networks:
    kong-net:
        external:
            name: kong-net 
services:
    # kong:
    #     # image: kong:2.0.2-alpine
    #     image: kong/kong-gateway:2.8.1.3-alpine
    #     container_name: kong
    #     depends_on:
    #         - kong_db
    #         - kong_migration
    #     expose:
    #         - "8001"
    #         - "8444"
    #         - "8000"
    #         - "8443"
    #         - "8002"
    #         - "8445"
    #         - "8003"
    #         - "8004"
    #     restart: always
    #     environment:
    #         KONG_DATABASE:         postgres
    #         KONG_PG_HOST:          kong_db
    #         KONG_PG_USER:          kong
    #         KONG_PG_PASSWORD:      kong
    #         KONG_PG_PORT:          5431
    #         KONG_PG_DATABASE:      kong
    #         KONG_PROXY_ACCESS_LOG: /dev/stdout
    #         KONG_ADMIN_ACCESS_LOG: /dev/stdout
    #         KONG_PROXY_ERROR_LOG:  /dev/stderr
    #         KONG_ADMIN_ERROR_LOG:  /dev/stderr
    #         KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
    #         KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
    #         # KONG_PLUGINS:          basic-auth, key-auth, rate-limiting, prometheus, proxy-cache, oauth2
    #         KONG_ADMIN_GUI_URL:    http://localhost:8002
    #         KONG_LICENSE_DATA:
    #     networks: 
    #         - webproxy
    #         - default

    # kong_db:
    #     image: postgres:9.6
    #     container_name: kong_db
    #     volumes:
    #         - kong_datastore:/var/lib/postgresql/data
    #     restart: always
    #     environment:
    #         POSTGRES_DB: kong
    #         POSTGRES_USER: kong
    #         POSTGRES_PASSWORD: kong
    #         POSTGRES_HOST_AUTH_METHOD: trust
    #     expose:
    #         - "5431"
    #     networks:
    #         - default
    
    # kong_migration:
    #     # image: kong:latest
    #     image: kong/kong-gateway:2.8.1.3-alpine
    #     container_name: kong_migration
    #     command: "kong migrations bootstrap"
    #     restart: on-failure
    #     environment:
    #         KONG_PG_HOST: kong_db
    #         KONG_DATABASE: postgres
    #         KONG_PG_PASSWORD: kong
    #         KONG_PASSWORD: kong
    #     depends_on:
    #         - kong_db
    #     networks:
    #         - default

    # konga:
    #     container_name: konga
    #     image: pantsel/konga
    #     restart: always
    #     environment:
    #         DB_ADAPTER: postgres
    #         DB_HOST: konga_db
    #         DB_USER: konga 
    #         DB_DATABASE: konga
    #         NODE_ENV: development
    #     expose:
    #         - "1337"
    #     networks: 
    #         - webproxy
    #         - default

    # konga_db:
    #     image: postgres:9.6
    #     container_name: konga_db
    #     volumes:
    #         - konga_database:/var/lib/postgresql/data
    #     restart: always
    #     environment:
    #         POSTGRES_DB: konga
    #         POSTGRES_USER: konga
    #         POSTGRES_HOST_AUTH_METHOD: trust 

    # portainer:
    #     image: portainer/portainer-ce:latest
    #     container_name: portainer
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    #         - portainer_data:/data
    #     expose:
    #         - "9002"

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
            - '9090:9090'
        restart: always

    node-exporter:
        image: prom/node-exporter:latest
        container_name: node-exporter
        ports:
            - '9100:9100'
        restart: always
            
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        volumes:
            - grafana_data:/var/lib/grafana
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_SERVER_ROOT_URL=http://grafana.server.name
        depends_on:
            - prometheus
        ports:
            - "3000:3000"
        restart: always
        networks:
            - kong-net